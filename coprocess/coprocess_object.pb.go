// Code generated by protoc-gen-go.
// source: coprocess_object.proto
// DO NOT EDIT!

package coprocess

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Object struct {
	HookType       HookType           `protobuf:"varint,1,opt,name=hook_type,json=hookType,enum=coprocess.HookType" json:"hook_type,omitempty"`
	MiddlewareName string             `protobuf:"bytes,2,opt,name=middleware_name,json=middlewareName" json:"middleware_name,omitempty"`
	Request        *MiniRequestObject `protobuf:"bytes,3,opt,name=request" json:"request,omitempty"`
	Session        *SessionState      `protobuf:"bytes,4,opt,name=session" json:"session,omitempty"`
	Metadata       map[string]string  `protobuf:"bytes,5,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Spec           map[string]string  `protobuf:"bytes,6,rep,name=spec" json:"spec,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Object) Reset()                    { *m = Object{} }
func (m *Object) String() string            { return proto.CompactTextString(m) }
func (*Object) ProtoMessage()               {}
func (*Object) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Object) GetRequest() *MiniRequestObject {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Object) GetSession() *SessionState {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *Object) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Object) GetSpec() map[string]string {
	if m != nil {
		return m.Spec
	}
	return nil
}

func init() {
	proto.RegisterType((*Object)(nil), "coprocess.Object")
}

func init() { proto.RegisterFile("coprocess_object.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 319 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x91, 0x5f, 0x4f, 0xf2, 0x30,
	0x14, 0x87, 0x03, 0xe3, 0xdf, 0xce, 0x9b, 0x17, 0x4d, 0x35, 0xda, 0x4c, 0x8d, 0x44, 0x2f, 0xf4,
	0x6a, 0x2a, 0x26, 0x6a, 0xe4, 0xda, 0xc4, 0x1b, 0x34, 0x29, 0xde, 0x2f, 0x65, 0x9c, 0x84, 0x09,
	0x5d, 0x71, 0x2d, 0x1a, 0xbe, 0x96, 0x9f, 0xd0, 0xd2, 0x8e, 0x6d, 0xc4, 0x2b, 0x6f, 0x96, 0xf6,
	0xfc, 0x9e, 0xe7, 0xb4, 0xa7, 0x83, 0x83, 0x58, 0x2e, 0x32, 0x19, 0xa3, 0x52, 0x91, 0x1c, 0xbf,
	0x63, 0xac, 0x43, 0xb3, 0xd5, 0x92, 0xf8, 0x45, 0x3d, 0x38, 0x2f, 0x11, 0x91, 0xa4, 0x49, 0x94,
	0xe1, 0xc7, 0x12, 0x95, 0xde, 0xe2, 0x83, 0x93, 0x12, 0x52, 0xe6, 0x93, 0xc8, 0x34, 0x52, 0x9a,
	0x6b, 0xcc, 0xe3, 0xca, 0x31, 0xb1, 0x14, 0x42, 0xa6, 0xae, 0x7e, 0xf6, 0xed, 0x41, 0xeb, 0xd5,
	0xf6, 0x21, 0xd7, 0xe0, 0x4f, 0xa5, 0x9c, 0x45, 0x7a, 0xb5, 0x40, 0x5a, 0xeb, 0xd5, 0x2e, 0xbb,
	0xfd, 0xbd, 0xb0, 0xd0, 0xc2, 0x67, 0x93, 0xbd, 0x99, 0x88, 0x75, 0xa6, 0xf9, 0x8a, 0x5c, 0xc0,
	0x8e, 0x48, 0x26, 0x93, 0x39, 0x7e, 0xf1, 0x0c, 0xa3, 0x94, 0x0b, 0xa4, 0x75, 0xe3, 0xf9, 0xac,
	0x5b, 0x96, 0x5f, 0x4c, 0x95, 0xdc, 0x41, 0x3b, 0xbf, 0x34, 0xf5, 0x0c, 0xf0, 0xaf, 0x7f, 0x5c,
	0x69, 0x3c, 0x34, 0x33, 0x31, 0x97, 0xba, 0x9b, 0xb0, 0x0d, 0x4c, 0x6e, 0xa0, 0x9d, 0x0f, 0x43,
	0x1b, 0xd6, 0x3b, 0xac, 0x78, 0x23, 0x97, 0x8c, 0xd6, 0x53, 0xb2, 0x0d, 0x47, 0x06, 0xd0, 0x11,
	0xa8, 0xf9, 0x84, 0x6b, 0x4e, 0x9b, 0x3d, 0xcf, 0x38, 0xa7, 0x15, 0xc7, 0x1d, 0x10, 0x0e, 0x73,
	0xe2, 0x29, 0xd5, 0xd9, 0x8a, 0x15, 0x02, 0xb9, 0x82, 0x86, 0x5a, 0x60, 0x4c, 0x5b, 0x56, 0x3c,
	0xfa, 0x2d, 0x8e, 0x4c, 0xea, 0x24, 0x0b, 0x06, 0x03, 0xf8, 0xbf, 0xd5, 0x8b, 0xec, 0x82, 0x37,
	0xc3, 0x95, 0x7d, 0x3e, 0x9f, 0xad, 0x97, 0x64, 0x1f, 0x9a, 0x9f, 0x7c, 0xbe, 0xdc, 0x3c, 0x8d,
	0xdb, 0x3c, 0xd6, 0x1f, 0x6a, 0xc1, 0x3d, 0xf8, 0x45, 0xbf, 0xbf, 0x88, 0xe3, 0x96, 0xfd, 0x77,
	0xb7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x23, 0x69, 0x2a, 0xe4, 0x3c, 0x02, 0x00, 0x00,
}
